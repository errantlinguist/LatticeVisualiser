<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<!-- Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 "License"); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License. -->
 
<!-- Ant buildfile for "Millennium ASR Lattice Visualiser"
AUTHOR: Todd Shore
VERSION: 2011-11-28
WEBSITE: https://github.com/errantlinguist/LatticeVisualiser
LICENSING:
Copyright 2011-2012 Todd Shore. Distributed under the Apache License 2.0: See the files "NOTICE" and "LICENSE".
-->
<project basedir="." default="build" name="LatticeVisualiser">
	
	<target name="makeclasspath" description="makes a classpath for the Java VM/compiler">
		<!-- <echo message="externaljars: ${externaljars}"/> -->
		<path id="classpath">
			<pathelement location="${classes.dir}"/>
			<pathelement path="${externaljars}"/>
		</path>
	</target>
 
	<target name="init" description="Sets up the initial environment" >
		<property file="default.properties"/>	
	</target>
	
	<target name="init.build" depends="init" description="Sets up the initial build environment">
		<mkdir dir="${classes.dir}"/>
		<copy includeemptydirs="false" todir="${classes.dir}">
			<fileset dir="${source.dir}">
				<exclude name="**/*.java"/>
			</fileset>
		</copy>	
	</target>
    
	<target name="clean" description="Removes class files">
		<delete dir="${classes.dir}"/>
	</target>
	
	<target name="cleanjars" description="Removes all JAR files">
		<delete dir="${jar.dir}" />	
	</target>
	
	<target name="cleanmainjar" description="Removes the main JAR file (e.g. ${jar.main})">
		<delete file="${jar.dir}/${jar.main}" />	
	</target>
    
	<target name="cleanall" description="Removes class, JAR and Javadoc files" depends="clean,cleanjars,cleanjavadoc" />
	
	<target name="makejarmanifestclasspath" depends="makeclasspath">
		<manifestclasspath property="jar.manifest.classpath" jarfile="${jar.dir}/${jar.main}">
			<classpath refid="classpath" />
		</manifestclasspath>
	</target>
	
	<target name="init.jar" depends="init" description="Sets up the initial environment for creating JARs">
		<property file="jar.properties"/>
		<mkdir dir="${jar.dir}"/>
	</target>
	
	<target name="jar" depends="build,init.jar,makejarmanifestclasspath" description="Jars the main code">
		<mkdir dir="${jar.dir}"/>
		<echo message="Classpath for JAR manifest: ${jar.manifest.classpath}"/>
		<jar destfile="${jar.dir}/${jar.main}" compress="true">
			<fileset dir="${classes.dir}"/>
			<!-- define MANIFEST.MF -->
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Main-Class" value="${class.main}" />
				<section name="common">
					<attribute name="Specification-Title" value="${jar.manifest.specification.title}" />
					<attribute name="Specification-Version" value="${jar.manifest.specification.version}" />
					<attribute name="Specification-Vendor" value="${jar.manifest.specification.vendor}" />
					<attribute name="Implementation-Title" value="${jar.manifest.implementation.title}" />
					<attribute name="Implementation-Version" value="${jar.manifest.implementation.version}" />
					<attribute name="Implementation-Vendor" value="${jar.manifest.implementation.vendor}" />
				</section>
 
				<attribute name="Class-Path" value="${jar.manifest.classpath}" />
			</manifest>
		</jar>
	</target>
    
	<target depends="init.build" name="build" description="Builds the LatticeVisualiser Java application">
		<echo message="${ant.project.name}: ${ant.file}"/>
		<echo message="Classpath: ${toString:classpath}"/>
		
		<!-- <echo message="Writing classpath to file: ${classpath.file}" />
		<echo message="build.classpath = ${toString:classpath}" file="classpath.properties" /> -->
		
		<javac includeantruntime="false" debug="true" debuglevel="${javac.debuglevel}" destdir="${classes.dir}" source="${sourceVersion}" target="${targetVersion}" classpathref="classpath" optimize="${javac.optimize}">
			<src path="${source.dir}"/>
		</javac>
	</target>
    
	<target name="demo" depends="build" description="Runs a demonstration of the LatticeVisualiser application">
		<!-- <property file="classpath.properties"/> -->
		<java classname="${class.main}" failonerror="true" fork="yes" classpathref="classpath">
			<arg line="${demo.args}"/>
		</java>
	</target>
	
	<target name="init.javadoc" depends="init" description="Sets up the initial environment for creating a Javadoc">
		<property file="javadoc.properties"/>
	</target>
	
	<target name="javadoc" depends="init.javadoc">
		<echo message="${ant.project.name}: ${ant.file}"/>
		<!-- <echo message="Classpath: ${toString:classpath}"/> -->
		<javadoc access="${javadoc.access}" author="${javadoc.true}" classpathref="classpath" destdir="${javadoc.dir}" nodeprecated="${javadoc.nodeprecated}" nodeprecatedlist="${javadoc.nodeprecatedlist}" noindex="${javadoc.false}" nonavbar="${javadoc.nonavbar}" notree="${javadoc.notree}" packagenames="${javadoc.packagenames}" source="${sourceVersion}" sourcepath="${source.dir}" splitindex="${javadoc.splitindex}" use="${javadoc.use}" version="true">
			<link href="http://download.oracle.com/javase/6/docs/api/"/>
			<link href="http://docs.guava-libraries.googlecode.com/git/javadoc/"/>
			<link href="http://commons.apache.org/cli/api-release/" />
			<link href="http://commons.apache.org/collections/api-release/" />
			<link href="http://jung.sourceforge.net/doc/api/" />
		</javadoc>
    	</target>
    	
    	<target name="cleanjavadoc" depends="init.javadoc" description="Removes Javadoc files">
		<delete dir="${javadoc.dir}"/>
	</target>
    
</project>
